install.packages(c("rms", "slider"))
install.packages(c("plumber", "rcompanion", "tensorflow"))
-16*95
8 -84 -60
12*19
8 + 228 - 60
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, echo = FALSE, fig.width = 4, fig.height = 4)
library(tibble)
tribble(~ ``, ~ Steel, ~ Cement,
library(tibble)
tribble(~ `.`, ~ Steel, ~ Cement,
"Unit Volume (Square Metres)", "4", "10",
"Unit Weight (KG)", "50", "40")
library(tibble)
tribble(~ `.`, ~ Steel, ~ Cement,
"Unit Volume (Cubic Metres)", "4", "10",
"Unit Weight (KG)", "50", "40") %>%
knitr::kable(caption = "Volume and Weight of Steel vs Cement")
library(tibble)
tribble(~ `.`, ~ Steel, ~ Cement,
"Unit Volume (Cubic Metres)", "4", "10",
"Unit Weight (KG)", "50", "40") %>%
knitr::kable(caption = "Volume and Weight of Steel vs Cement") %>%
kableExtra::kable_styling(booktabs = TRUE, full_width = TRUE, font_size = 10)
library(tibble)
tribble(~ `.`, ~ Steel, ~ Cement,
"Unit Volume (Cubic Metres)", "4", "10",
"Unit Weight (KG)", "50", "40") %>%
knitr::kable(caption = "Volume and Weight of Steel vs Cement", booktabs = TRUE) %>%
kableExtra::kable_styling(full_width = TRUE, font_size = 10)
library(tibble)
tribble(~ `.`, ~ Steel, ~ Cement,
"Unit Volume (Cubic Metres)", "4", "10",
"Unit Weight (KG)", "50", "40") %>%
knitr::kable(caption = "Volume and Weight of Steel vs Cement", booktabs = TRUE) %>%
kableExtra::kable_styling(full_width = TRUE, font_size = 10)
library(tibble)
tribble(~ `.`, ~ Steel, ~ Cement,
"Unit Volume (Cubic Metres)", "4", "10",
"Unit Weight (KG)", "50", "40") %>%
knitr::kable(caption = "Volume and Weight of Steel vs Cement", booktabs = TRUE, long_table = TRUE) %>%
kableExtra::kable_styling(full_width = TRUE, font_size = 10)
library(tibble)
tribble(~ `.`, ~ `.`, ~ Output, ~ `.`,
"Inputs", "Agricultural Products", "Manufactured Goods", "Fuels")
library(tibble)
tribble(~ ` `, ~ `.`, ~ Output, ~ `.`,
"Inputs", "Agricultural Products", "Manufactured Goods", "Fuels")
library(tibble)
tribble(~ ` `, ~ ` `, ~ Output, ~ ` `,
"Inputs", "Agricultural Products", "Manufactured Goods", "Fuels")
library(tibble)
tribble(~ `.`, ~ Steel, ~ Cement,
"Unit Volume (Cubic Metres)", "4", "10",
"Unit Weight (KG)", "50", "40") %>%
knitr::kable(caption = "Volume and Weight of Steel vs Cement") %>%
kableExtra::kable_styling(font_size = 10, full_width = TRUE)
library(tibble)
tribble(~ ` `, ~ ` `, ~ Output, ~ ` `,
"Inputs", "Agricultural Products", "Manufactured Goods", "Fuels",
"Agricultural Products", "", "", "",
"Manufactured Goods", "", "", "",
"Fuels", "", "", "")
library(tibble)
tribble(~ ` `, ~ ` `, ~ Output, ~ ` `,
"Inputs", "Agricultural Products", "Manufactured Goods", "Fuels",
"Agricultural Products", "", "", "",
"Manufactured Goods", "", "", "",
"Fuels", "", "", "") %>% knitr::kable(caption = "Input-Output matrix") %>%
kableExtra::kable_styling(full_width = TRUE, longtable = TRUE)
library(tibble)
tribble(~ ` `, ~ ` `, ~ Output, ~ ` `,
"Inputs", "Agricultural Products", "Manufactured Goods", "Fuels",
"Agricultural Products", "", "", "",
"Manufactured Goods", "", "", "",
"Fuels", "", "", "") %>% knitr::kable(caption = "Input-Output matrix") %>%
kableExtra::kable_styling(full_width = TRUE)
library(tibble)
tribble(~ ` `, ~ ` `, ~ Output, ~ ` `,
"Inputs", "Agricultural Products", "Manufactured Goods", "Fuels",
"Agricultural Products", "0.5", "0.1", "0.1",
"Manufactured Goods", "0.2", "0.5", "0.3",
"Fuels", "0.1", "0.3", "0.4") %>% knitr::kable(caption = "Input-Output matrix") %>%
kableExtra::kable_styling(full_width = TRUE)
library(tibble)
tribble(~ ` `, ~ ` `, ~ Output, ~ ` `,
"Inputs", "Agricultural Products", "Manufactured Goods", "Fuels",
"Agricultural Products", "0.5", "0.1", "0.1",
"Manufactured Goods", "0.2", "0.5", "0.3",
"Fuels", "0.1", "0.3", "0.4") %>% knitr::kable(caption = "Input-Output matrix") %>%
kableExtra::kable_styling(full_width = TRUE, font_size = 10)
library(tidyverse)
theme_set(ggthemes::theme_clean())
x = -100:100
tibble(
x, y = 2 * x + 3,
ysq = x**2 + 2*x + 1
) %>%
ggplot(aes(x = x, y = y)) +
geom_line(linewidth = 3) +
labs(title = "Plot of Y against X, for Y = 2X + 3")
tibble(
x, y = 2 * x + 3,
ysq = x**2 + 2*x + 1
) %>%
ggplot(aes(x = x, y = ysq)) +
geom_line(linewidth = 3) +
labs(title = "Plot of Y against X, for X^2 + 2X + 1")
tibble(
x, y = 2 * x + 3,
ysq = x**2 + 2*x + 1
) %>%
ggplot(aes(x = x, y = ysq)) +
geom_line(linewidth = 3) +
labs(title = "Plot of Y against X, for X^2 + 2X + 1")
tibble(
x, y = 2 * x + 3,
ysq = x**2 + 2*x + 1,
ycubed = x ^ 3
) %>%
ggplot(aes(x = x, y = ycubed)) +
geom_line(linewidth = 3) +
labs(title = "Plot of Y against X Cubed")
## Not a function - circle
## The equation of a circle is
## X^2 + y^2 = r^2
## lets see an example of a circle with radius of 10
## Thats x^2 + y^2 = 10^2
circleFun <- function(center = c(0,0),diameter = 1, npoints = 100){
r = diameter / 2
tt <- seq(0,2*pi,length.out = npoints)
xx <- center[1] + r * cos(tt)
yy <- center[2] + r * sin(tt)
return(data.frame(x = xx, y = yy))
}
dat <- circleFun(diameter = 10)
ggplot(dat,aes(x,y)) + geom_path(linewidth = 3)
